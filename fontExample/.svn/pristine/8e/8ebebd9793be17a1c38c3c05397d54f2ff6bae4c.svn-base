<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="readProductMapper">
	<select id="readProductTop" resultType="readProduct">
			select product.no no, product.image image, product.name, product.price, product.quantity, sell.area, tag.name tagname, product.product_date,
			sell.image img, sell.infomation, seller.profile, seller.name sellername, seller.username, member.trust, seller.count
			from product, sell, tag, seller, member
			where product.no=sell.product_no and product.no=tag.product_no and member.username=seller.username and product.no=#{no}
	</select>
	<select id="readProductInquiry" resultType="productInquiry">
		select sell.no pno, product_inquiry.no ino, product_inquiry.username, product_inquiry.question, product_inquiry.answer
		from sell, product_inquiry where sell.no=product_inquiry.product_no order by ino desc
	</select>
	
	<select id="inquiryByPage" resultType="productInquiry">
		<![CDATA[ 
		select * from
		(
		select rownum as rnum, P.* from
		(select /*+ index_desc(product_inquiry pk_product_inquiry)*/ no, product_no, username, question, answer, iquiry_date from product_inquiry) P
		where rownum <=#{endRowNum}
		)
		where rnum>=#{startRowNum}
		]]>
	</select>
	
	<select id="findCount" resultType="int">
		select /*+ index_ffs(product_inquiry pk_product_inquiry) */ count(no) from product_inquiry
	</select>
	
	<insert id="insertInQuestion" useGeneratedKeys="true" keyProperty="no">
		<selectKey keyProperty="no" resultType="int" order="BEFORE">
			select product_inquiry_seq.nextval from dual
		</selectKey>
		insert into product_inquiry(no, product_no, username, question, answer, iquiry_date)
		values(#{no}, #{product_no}, #{username}, #{question}, #{answer}, sysdate)
	</insert>
	
	<update id="insertInAnswer">
		update product_inquiry set answer=#{answer} where no=#{no}
	</update>
	
	<select id="readSeller" resultType="seller">
			select sell.image img, seller.profile, seller.name sellername, seller.username, member.trust, seller.count
			from product, sell, seller, member
			where member.username=seller.username and seller.username=#{username}
	</select>
</mapper>